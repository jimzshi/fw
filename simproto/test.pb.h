// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_test_2eproto__INCLUDED
#define PROTOBUF_test_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace simproto {
namespace test {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_test_2eproto();
void protobuf_AssignDesc_test_2eproto();
void protobuf_ShutdownFile_test_2eproto();

class Request;
class Response;
class Response_ReturnCode;
class Response_ReturnBody;

enum Response_BodyType {
  Response_BodyType_JSON = 0,
  Response_BodyType_TEXT = 1,
  Response_BodyType_XML = 2
};
bool Response_BodyType_IsValid(int value);
const Response_BodyType Response_BodyType_BodyType_MIN = Response_BodyType_JSON;
const Response_BodyType Response_BodyType_BodyType_MAX = Response_BodyType_XML;
const int Response_BodyType_BodyType_ARRAYSIZE = Response_BodyType_BodyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Response_BodyType_descriptor();
inline const ::std::string& Response_BodyType_Name(Response_BodyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Response_BodyType_descriptor(), value);
}
inline bool Response_BodyType_Parse(
    const ::std::string& name, Response_BodyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Response_BodyType>(
    Response_BodyType_descriptor(), name, value);
}
// ===================================================================

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ver = 1 [default = "1.0"];
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  const ::std::string& ver() const;
  void set_ver(const ::std::string& value);
  void set_ver(const char* value);
  void set_ver(const char* value, size_t size);
  ::std::string* mutable_ver();
  ::std::string* release_ver();
  void set_allocated_ver(::std::string* ver);

  // required string cmd = 2;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  const ::std::string& cmd() const;
  void set_cmd(const ::std::string& value);
  void set_cmd(const char* value);
  void set_cmd(const char* value, size_t size);
  ::std::string* mutable_cmd();
  ::std::string* release_cmd();
  void set_allocated_cmd(::std::string* cmd);

  // repeated string args = 3;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 3;
  const ::std::string& args(int index) const;
  ::std::string* mutable_args(int index);
  void set_args(int index, const ::std::string& value);
  void set_args(int index, const char* value);
  void set_args(int index, const char* value, size_t size);
  ::std::string* add_args();
  void add_args(const ::std::string& value);
  void add_args(const char* value);
  void add_args(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& args() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_args();

  // @@protoc_insertion_point(class_scope:simproto.test.Request)
 private:
  inline void set_has_ver();
  inline void clear_has_ver();
  inline void set_has_cmd();
  inline void clear_has_cmd();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  static ::std::string* _default_ver_;
  ::google::protobuf::internal::ArenaStringPtr ver_;
  ::google::protobuf::internal::ArenaStringPtr cmd_;
  ::google::protobuf::RepeatedPtrField< ::std::string> args_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class Response_ReturnCode : public ::google::protobuf::Message {
 public:
  Response_ReturnCode();
  virtual ~Response_ReturnCode();

  Response_ReturnCode(const Response_ReturnCode& from);

  inline Response_ReturnCode& operator=(const Response_ReturnCode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_ReturnCode& default_instance();

  void Swap(Response_ReturnCode* other);

  // implements Message ----------------------------------------------

  inline Response_ReturnCode* New() const { return New(NULL); }

  Response_ReturnCode* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_ReturnCode& from);
  void MergeFrom(const Response_ReturnCode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_ReturnCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 err_no = 1 [default = 0];
  bool has_err_no() const;
  void clear_err_no();
  static const int kErrNoFieldNumber = 1;
  ::google::protobuf::int32 err_no() const;
  void set_err_no(::google::protobuf::int32 value);

  // required string err_msg = 2 [default = "OK"];
  bool has_err_msg() const;
  void clear_err_msg();
  static const int kErrMsgFieldNumber = 2;
  const ::std::string& err_msg() const;
  void set_err_msg(const ::std::string& value);
  void set_err_msg(const char* value);
  void set_err_msg(const char* value, size_t size);
  ::std::string* mutable_err_msg();
  ::std::string* release_err_msg();
  void set_allocated_err_msg(::std::string* err_msg);

  // @@protoc_insertion_point(class_scope:simproto.test.Response.ReturnCode)
 private:
  inline void set_has_err_no();
  inline void clear_has_err_no();
  inline void set_has_err_msg();
  inline void clear_has_err_msg();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  static ::std::string* _default_err_msg_;
  ::google::protobuf::internal::ArenaStringPtr err_msg_;
  ::google::protobuf::int32 err_no_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Response_ReturnCode* default_instance_;
};
// -------------------------------------------------------------------

class Response_ReturnBody : public ::google::protobuf::Message {
 public:
  Response_ReturnBody();
  virtual ~Response_ReturnBody();

  Response_ReturnBody(const Response_ReturnBody& from);

  inline Response_ReturnBody& operator=(const Response_ReturnBody& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_ReturnBody& default_instance();

  void Swap(Response_ReturnBody* other);

  // implements Message ----------------------------------------------

  inline Response_ReturnBody* New() const { return New(NULL); }

  Response_ReturnBody* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_ReturnBody& from);
  void MergeFrom(const Response_ReturnBody& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_ReturnBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .simproto.test.Response.BodyType type = 1 [default = JSON];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::simproto::test::Response_BodyType type() const;
  void set_type(::simproto::test::Response_BodyType value);

  // required string content = 2;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:simproto.test.Response.ReturnBody)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_content();
  inline void clear_has_content();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  int type_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Response_ReturnBody* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Response_ReturnCode ReturnCode;
  typedef Response_ReturnBody ReturnBody;

  typedef Response_BodyType BodyType;
  static const BodyType JSON = Response_BodyType_JSON;
  static const BodyType TEXT = Response_BodyType_TEXT;
  static const BodyType XML = Response_BodyType_XML;
  static inline bool BodyType_IsValid(int value) {
    return Response_BodyType_IsValid(value);
  }
  static const BodyType BodyType_MIN =
    Response_BodyType_BodyType_MIN;
  static const BodyType BodyType_MAX =
    Response_BodyType_BodyType_MAX;
  static const int BodyType_ARRAYSIZE =
    Response_BodyType_BodyType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  BodyType_descriptor() {
    return Response_BodyType_descriptor();
  }
  static inline const ::std::string& BodyType_Name(BodyType value) {
    return Response_BodyType_Name(value);
  }
  static inline bool BodyType_Parse(const ::std::string& name,
      BodyType* value) {
    return Response_BodyType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string ver = 1 [default = "1.0"];
  bool has_ver() const;
  void clear_ver();
  static const int kVerFieldNumber = 1;
  const ::std::string& ver() const;
  void set_ver(const ::std::string& value);
  void set_ver(const char* value);
  void set_ver(const char* value, size_t size);
  ::std::string* mutable_ver();
  ::std::string* release_ver();
  void set_allocated_ver(::std::string* ver);

  // required .simproto.test.Response.ReturnCode code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::simproto::test::Response_ReturnCode& code() const;
  ::simproto::test::Response_ReturnCode* mutable_code();
  ::simproto::test::Response_ReturnCode* release_code();
  void set_allocated_code(::simproto::test::Response_ReturnCode* code);

  // repeated .simproto.test.Response.ReturnBody body = 3;
  int body_size() const;
  void clear_body();
  static const int kBodyFieldNumber = 3;
  const ::simproto::test::Response_ReturnBody& body(int index) const;
  ::simproto::test::Response_ReturnBody* mutable_body(int index);
  ::simproto::test::Response_ReturnBody* add_body();
  const ::google::protobuf::RepeatedPtrField< ::simproto::test::Response_ReturnBody >&
      body() const;
  ::google::protobuf::RepeatedPtrField< ::simproto::test::Response_ReturnBody >*
      mutable_body();

  // @@protoc_insertion_point(class_scope:simproto.test.Response)
 private:
  inline void set_has_ver();
  inline void clear_has_ver();
  inline void set_has_code();
  inline void clear_has_code();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  static ::std::string* _default_ver_;
  ::google::protobuf::internal::ArenaStringPtr ver_;
  ::simproto::test::Response_ReturnCode* code_;
  ::google::protobuf::RepeatedPtrField< ::simproto::test::Response_ReturnBody > body_;
  friend void  protobuf_AddDesc_test_2eproto();
  friend void protobuf_AssignDesc_test_2eproto();
  friend void protobuf_ShutdownFile_test_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// required string ver = 1 [default = "1.0"];
inline bool Request::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_ver() {
  ver_.ClearToDefaultNoArena(_default_ver_);
  clear_has_ver();
}
inline const ::std::string& Request::ver() const {
  // @@protoc_insertion_point(field_get:simproto.test.Request.ver)
  return ver_.GetNoArena(_default_ver_);
}
inline void Request::set_ver(const ::std::string& value) {
  set_has_ver();
  ver_.SetNoArena(_default_ver_, value);
  // @@protoc_insertion_point(field_set:simproto.test.Request.ver)
}
inline void Request::set_ver(const char* value) {
  set_has_ver();
  ver_.SetNoArena(_default_ver_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:simproto.test.Request.ver)
}
inline void Request::set_ver(const char* value, size_t size) {
  set_has_ver();
  ver_.SetNoArena(_default_ver_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:simproto.test.Request.ver)
}
inline ::std::string* Request::mutable_ver() {
  set_has_ver();
  // @@protoc_insertion_point(field_mutable:simproto.test.Request.ver)
  return ver_.MutableNoArena(_default_ver_);
}
inline ::std::string* Request::release_ver() {
  clear_has_ver();
  return ver_.ReleaseNoArena(_default_ver_);
}
inline void Request::set_allocated_ver(::std::string* ver) {
  if (ver != NULL) {
    set_has_ver();
  } else {
    clear_has_ver();
  }
  ver_.SetAllocatedNoArena(_default_ver_, ver);
  // @@protoc_insertion_point(field_set_allocated:simproto.test.Request.ver)
}

// required string cmd = 2;
inline bool Request::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_cmd() {
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmd();
}
inline const ::std::string& Request::cmd() const {
  // @@protoc_insertion_point(field_get:simproto.test.Request.cmd)
  return cmd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_cmd(const ::std::string& value) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:simproto.test.Request.cmd)
}
inline void Request::set_cmd(const char* value) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:simproto.test.Request.cmd)
}
inline void Request::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:simproto.test.Request.cmd)
}
inline ::std::string* Request::mutable_cmd() {
  set_has_cmd();
  // @@protoc_insertion_point(field_mutable:simproto.test.Request.cmd)
  return cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_cmd() {
  clear_has_cmd();
  return cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_cmd(::std::string* cmd) {
  if (cmd != NULL) {
    set_has_cmd();
  } else {
    clear_has_cmd();
  }
  cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd);
  // @@protoc_insertion_point(field_set_allocated:simproto.test.Request.cmd)
}

// repeated string args = 3;
inline int Request::args_size() const {
  return args_.size();
}
inline void Request::clear_args() {
  args_.Clear();
}
inline const ::std::string& Request::args(int index) const {
  // @@protoc_insertion_point(field_get:simproto.test.Request.args)
  return args_.Get(index);
}
inline ::std::string* Request::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:simproto.test.Request.args)
  return args_.Mutable(index);
}
inline void Request::set_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:simproto.test.Request.args)
  args_.Mutable(index)->assign(value);
}
inline void Request::set_args(int index, const char* value) {
  args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:simproto.test.Request.args)
}
inline void Request::set_args(int index, const char* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:simproto.test.Request.args)
}
inline ::std::string* Request::add_args() {
  return args_.Add();
}
inline void Request::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:simproto.test.Request.args)
}
inline void Request::add_args(const char* value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:simproto.test.Request.args)
}
inline void Request::add_args(const char* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:simproto.test.Request.args)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Request::args() const {
  // @@protoc_insertion_point(field_list:simproto.test.Request.args)
  return args_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Request::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:simproto.test.Request.args)
  return &args_;
}

// -------------------------------------------------------------------

// Response_ReturnCode

// required int32 err_no = 1 [default = 0];
inline bool Response_ReturnCode::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_ReturnCode::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_ReturnCode::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_ReturnCode::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
inline ::google::protobuf::int32 Response_ReturnCode::err_no() const {
  // @@protoc_insertion_point(field_get:simproto.test.Response.ReturnCode.err_no)
  return err_no_;
}
inline void Response_ReturnCode::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
  // @@protoc_insertion_point(field_set:simproto.test.Response.ReturnCode.err_no)
}

// required string err_msg = 2 [default = "OK"];
inline bool Response_ReturnCode::has_err_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_ReturnCode::set_has_err_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_ReturnCode::clear_has_err_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_ReturnCode::clear_err_msg() {
  err_msg_.ClearToDefaultNoArena(_default_err_msg_);
  clear_has_err_msg();
}
inline const ::std::string& Response_ReturnCode::err_msg() const {
  // @@protoc_insertion_point(field_get:simproto.test.Response.ReturnCode.err_msg)
  return err_msg_.GetNoArena(_default_err_msg_);
}
inline void Response_ReturnCode::set_err_msg(const ::std::string& value) {
  set_has_err_msg();
  err_msg_.SetNoArena(_default_err_msg_, value);
  // @@protoc_insertion_point(field_set:simproto.test.Response.ReturnCode.err_msg)
}
inline void Response_ReturnCode::set_err_msg(const char* value) {
  set_has_err_msg();
  err_msg_.SetNoArena(_default_err_msg_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:simproto.test.Response.ReturnCode.err_msg)
}
inline void Response_ReturnCode::set_err_msg(const char* value, size_t size) {
  set_has_err_msg();
  err_msg_.SetNoArena(_default_err_msg_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:simproto.test.Response.ReturnCode.err_msg)
}
inline ::std::string* Response_ReturnCode::mutable_err_msg() {
  set_has_err_msg();
  // @@protoc_insertion_point(field_mutable:simproto.test.Response.ReturnCode.err_msg)
  return err_msg_.MutableNoArena(_default_err_msg_);
}
inline ::std::string* Response_ReturnCode::release_err_msg() {
  clear_has_err_msg();
  return err_msg_.ReleaseNoArena(_default_err_msg_);
}
inline void Response_ReturnCode::set_allocated_err_msg(::std::string* err_msg) {
  if (err_msg != NULL) {
    set_has_err_msg();
  } else {
    clear_has_err_msg();
  }
  err_msg_.SetAllocatedNoArena(_default_err_msg_, err_msg);
  // @@protoc_insertion_point(field_set_allocated:simproto.test.Response.ReturnCode.err_msg)
}

// -------------------------------------------------------------------

// Response_ReturnBody

// required .simproto.test.Response.BodyType type = 1 [default = JSON];
inline bool Response_ReturnBody::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_ReturnBody::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_ReturnBody::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_ReturnBody::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::simproto::test::Response_BodyType Response_ReturnBody::type() const {
  // @@protoc_insertion_point(field_get:simproto.test.Response.ReturnBody.type)
  return static_cast< ::simproto::test::Response_BodyType >(type_);
}
inline void Response_ReturnBody::set_type(::simproto::test::Response_BodyType value) {
  assert(::simproto::test::Response_BodyType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:simproto.test.Response.ReturnBody.type)
}

// required string content = 2;
inline bool Response_ReturnBody::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_ReturnBody::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_ReturnBody::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_ReturnBody::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& Response_ReturnBody::content() const {
  // @@protoc_insertion_point(field_get:simproto.test.Response.ReturnBody.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_ReturnBody::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:simproto.test.Response.ReturnBody.content)
}
inline void Response_ReturnBody::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:simproto.test.Response.ReturnBody.content)
}
inline void Response_ReturnBody::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:simproto.test.Response.ReturnBody.content)
}
inline ::std::string* Response_ReturnBody::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:simproto.test.Response.ReturnBody.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_ReturnBody::release_content() {
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_ReturnBody::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:simproto.test.Response.ReturnBody.content)
}

// -------------------------------------------------------------------

// Response

// required string ver = 1 [default = "1.0"];
inline bool Response::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_ver() {
  ver_.ClearToDefaultNoArena(_default_ver_);
  clear_has_ver();
}
inline const ::std::string& Response::ver() const {
  // @@protoc_insertion_point(field_get:simproto.test.Response.ver)
  return ver_.GetNoArena(_default_ver_);
}
inline void Response::set_ver(const ::std::string& value) {
  set_has_ver();
  ver_.SetNoArena(_default_ver_, value);
  // @@protoc_insertion_point(field_set:simproto.test.Response.ver)
}
inline void Response::set_ver(const char* value) {
  set_has_ver();
  ver_.SetNoArena(_default_ver_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:simproto.test.Response.ver)
}
inline void Response::set_ver(const char* value, size_t size) {
  set_has_ver();
  ver_.SetNoArena(_default_ver_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:simproto.test.Response.ver)
}
inline ::std::string* Response::mutable_ver() {
  set_has_ver();
  // @@protoc_insertion_point(field_mutable:simproto.test.Response.ver)
  return ver_.MutableNoArena(_default_ver_);
}
inline ::std::string* Response::release_ver() {
  clear_has_ver();
  return ver_.ReleaseNoArena(_default_ver_);
}
inline void Response::set_allocated_ver(::std::string* ver) {
  if (ver != NULL) {
    set_has_ver();
  } else {
    clear_has_ver();
  }
  ver_.SetAllocatedNoArena(_default_ver_, ver);
  // @@protoc_insertion_point(field_set_allocated:simproto.test.Response.ver)
}

// required .simproto.test.Response.ReturnCode code = 2;
inline bool Response::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_code() {
  if (code_ != NULL) code_->::simproto::test::Response_ReturnCode::Clear();
  clear_has_code();
}
inline const ::simproto::test::Response_ReturnCode& Response::code() const {
  // @@protoc_insertion_point(field_get:simproto.test.Response.code)
  return code_ != NULL ? *code_ : *default_instance_->code_;
}
inline ::simproto::test::Response_ReturnCode* Response::mutable_code() {
  set_has_code();
  if (code_ == NULL) {
    code_ = new ::simproto::test::Response_ReturnCode;
  }
  // @@protoc_insertion_point(field_mutable:simproto.test.Response.code)
  return code_;
}
inline ::simproto::test::Response_ReturnCode* Response::release_code() {
  clear_has_code();
  ::simproto::test::Response_ReturnCode* temp = code_;
  code_ = NULL;
  return temp;
}
inline void Response::set_allocated_code(::simproto::test::Response_ReturnCode* code) {
  delete code_;
  code_ = code;
  if (code) {
    set_has_code();
  } else {
    clear_has_code();
  }
  // @@protoc_insertion_point(field_set_allocated:simproto.test.Response.code)
}

// repeated .simproto.test.Response.ReturnBody body = 3;
inline int Response::body_size() const {
  return body_.size();
}
inline void Response::clear_body() {
  body_.Clear();
}
inline const ::simproto::test::Response_ReturnBody& Response::body(int index) const {
  // @@protoc_insertion_point(field_get:simproto.test.Response.body)
  return body_.Get(index);
}
inline ::simproto::test::Response_ReturnBody* Response::mutable_body(int index) {
  // @@protoc_insertion_point(field_mutable:simproto.test.Response.body)
  return body_.Mutable(index);
}
inline ::simproto::test::Response_ReturnBody* Response::add_body() {
  // @@protoc_insertion_point(field_add:simproto.test.Response.body)
  return body_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::simproto::test::Response_ReturnBody >&
Response::body() const {
  // @@protoc_insertion_point(field_list:simproto.test.Response.body)
  return body_;
}
inline ::google::protobuf::RepeatedPtrField< ::simproto::test::Response_ReturnBody >*
Response::mutable_body() {
  // @@protoc_insertion_point(field_mutable_list:simproto.test.Response.body)
  return &body_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace test
}  // namespace simproto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::simproto::test::Response_BodyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::simproto::test::Response_BodyType>() {
  return ::simproto::test::Response_BodyType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_2eproto__INCLUDED
