// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace simproto {
namespace test {

namespace {

const ::google::protobuf::Descriptor* Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_ReturnCode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_ReturnCode_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_ReturnBody_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_ReturnBody_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Response_BodyType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_test_2eproto() {
  protobuf_AddDesc_test_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "test.proto");
  GOOGLE_CHECK(file != NULL);
  Request_descriptor_ = file->message_type(0);
  static const int Request_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, ver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, args_),
  };
  Request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Request_descriptor_,
      Request::default_instance_,
      Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _has_bits_[0]),
      -1,
      -1,
      sizeof(Request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _internal_metadata_),
      -1);
  Response_descriptor_ = file->message_type(1);
  static const int Response_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, ver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, body_),
  };
  Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_descriptor_,
      Response::default_instance_,
      Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _internal_metadata_),
      -1);
  Response_ReturnCode_descriptor_ = Response_descriptor_->nested_type(0);
  static const int Response_ReturnCode_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ReturnCode, err_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ReturnCode, err_msg_),
  };
  Response_ReturnCode_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_ReturnCode_descriptor_,
      Response_ReturnCode::default_instance_,
      Response_ReturnCode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ReturnCode, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_ReturnCode),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ReturnCode, _internal_metadata_),
      -1);
  Response_ReturnBody_descriptor_ = Response_descriptor_->nested_type(1);
  static const int Response_ReturnBody_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ReturnBody, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ReturnBody, content_),
  };
  Response_ReturnBody_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_ReturnBody_descriptor_,
      Response_ReturnBody::default_instance_,
      Response_ReturnBody_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ReturnBody, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_ReturnBody),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_ReturnBody, _internal_metadata_),
      -1);
  Response_BodyType_descriptor_ = Response_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_test_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Request_descriptor_, &Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_descriptor_, &Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_ReturnCode_descriptor_, &Response_ReturnCode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_ReturnBody_descriptor_, &Response_ReturnBody::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_test_2eproto() {
  delete Request::default_instance_;
  delete Request_reflection_;
  delete Request::_default_ver_;
  delete Response::default_instance_;
  delete Response_reflection_;
  delete Response::_default_ver_;
  delete Response_ReturnCode::default_instance_;
  delete Response_ReturnCode_reflection_;
  delete Response_ReturnCode::_default_err_msg_;
  delete Response_ReturnBody::default_instance_;
  delete Response_ReturnBody_reflection_;
}

void protobuf_AddDesc_test_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ntest.proto\022\rsimproto.test\"6\n\007Request\022\020"
    "\n\003ver\030\001 \002(\t:\0031.0\022\013\n\003cmd\030\002 \002(\t\022\014\n\004args\030\003 "
    "\003(\t\"\264\002\n\010Response\022\020\n\003ver\030\001 \002(\t:\0031.0\0220\n\004co"
    "de\030\002 \002(\0132\".simproto.test.Response.Return"
    "Code\0220\n\004body\030\003 \003(\0132\".simproto.test.Respo"
    "nse.ReturnBody\0324\n\nReturnCode\022\021\n\006err_no\030\001"
    " \002(\005:\0010\022\023\n\007err_msg\030\002 \002(\t:\002OK\032S\n\nReturnBo"
    "dy\0224\n\004type\030\001 \002(\0162 .simproto.test.Respons"
    "e.BodyType:\004JSON\022\017\n\007content\030\002 \002(\t\"\'\n\010Bod"
    "yType\022\010\n\004JSON\020\000\022\010\n\004TEXT\020\001\022\007\n\003XML\020\002", 394);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test.proto", &protobuf_RegisterTypes);
  Request::_default_ver_ =
      new ::std::string("1.0", 3);
  Request::default_instance_ = new Request();
  Response::_default_ver_ =
      new ::std::string("1.0", 3);
  Response::default_instance_ = new Response();
  Response_ReturnCode::_default_err_msg_ =
      new ::std::string("OK", 2);
  Response_ReturnCode::default_instance_ = new Response_ReturnCode();
  Response_ReturnBody::default_instance_ = new Response_ReturnBody();
  Request::default_instance_->InitAsDefaultInstance();
  Response::default_instance_->InitAsDefaultInstance();
  Response_ReturnCode::default_instance_->InitAsDefaultInstance();
  Response_ReturnBody::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_test_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_test_2eproto {
  StaticDescriptorInitializer_test_2eproto() {
    protobuf_AddDesc_test_2eproto();
  }
} static_descriptor_initializer_test_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

::std::string* Request::_default_ver_ = NULL;
#ifndef _MSC_VER
const int Request::kVerFieldNumber;
const int Request::kCmdFieldNumber;
const int Request::kArgsFieldNumber;
#endif  // !_MSC_VER

Request::Request()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:simproto.test.Request)
}

void Request::InitAsDefaultInstance() {
}

Request::Request(const Request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:simproto.test.Request)
}

void Request::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ver_.UnsafeSetDefault(_default_ver_);
  cmd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:simproto.test.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  ver_.DestroyNoArena(_default_ver_);
  cmd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_descriptor_;
}

const Request& Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Request* Request::default_instance_ = NULL;

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_ver()) {
      ver_.ClearToDefaultNoArena(_default_ver_);
    }
    if (has_cmd()) {
      cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  args_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:simproto.test.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ver = 1 [default = "1.0"];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ver().data(), this->ver().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.test.Request.ver");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cmd;
        break;
      }

      // required string cmd = 2;
      case 2: {
        if (tag == 18) {
         parse_cmd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cmd().data(), this->cmd().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.test.Request.cmd");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_args;
        break;
      }

      // repeated string args = 3;
      case 3: {
        if (tag == 26) {
         parse_args:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_args()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->args(this->args_size() - 1).data(),
            this->args(this->args_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.test.Request.args");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_args;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:simproto.test.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:simproto.test.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:simproto.test.Request)
  // required string ver = 1 [default = "1.0"];
  if (has_ver()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ver().data(), this->ver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.test.Request.ver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ver(), output);
  }

  // required string cmd = 2;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd().data(), this->cmd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.test.Request.cmd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cmd(), output);
  }

  // repeated string args = 3;
  for (int i = 0; i < this->args_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->args(i).data(), this->args(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "simproto.test.Request.args");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->args(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:simproto.test.Request)
}

::google::protobuf::uint8* Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:simproto.test.Request)
  // required string ver = 1 [default = "1.0"];
  if (has_ver()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ver().data(), this->ver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.test.Request.ver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ver(), target);
  }

  // required string cmd = 2;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmd().data(), this->cmd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.test.Request.cmd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cmd(), target);
  }

  // repeated string args = 3;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->args(i).data(), this->args(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.test.Request.args");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->args(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:simproto.test.Request)
  return target;
}

int Request::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_ver()) {
    // required string ver = 1 [default = "1.0"];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ver());
  }

  if (has_cmd()) {
    // required string cmd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmd());
  }

  return total_size;
}
int Request::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string ver = 1 [default = "1.0"];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ver());

    // required string cmd = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cmd());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string args = 3;
  total_size += 1 * this->args_size();
  for (int i = 0; i < this->args_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->args(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  args_.MergeFrom(from.args_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ver()) {
      set_has_ver();
      ver_.AssignWithDefault(_default_ver_, from.ver_);
    }
    if (from.has_cmd()) {
      set_has_cmd();
      cmd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmd_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  ver_.Swap(&other->ver_);
  cmd_.Swap(&other->cmd_);
  args_.UnsafeArenaSwap(&other->args_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_descriptor_;
  metadata.reflection = Request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// required string ver = 1 [default = "1.0"];
 bool Request::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void Request::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
 void Request::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
 void Request::clear_ver() {
  ver_.ClearToDefaultNoArena(_default_ver_);
  clear_has_ver();
}
 const ::std::string& Request::ver() const {
  // @@protoc_insertion_point(field_get:simproto.test.Request.ver)
  return ver_.GetNoArena(_default_ver_);
}
 void Request::set_ver(const ::std::string& value) {
  set_has_ver();
  ver_.SetNoArena(_default_ver_, value);
  // @@protoc_insertion_point(field_set:simproto.test.Request.ver)
}
 void Request::set_ver(const char* value) {
  set_has_ver();
  ver_.SetNoArena(_default_ver_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:simproto.test.Request.ver)
}
 void Request::set_ver(const char* value, size_t size) {
  set_has_ver();
  ver_.SetNoArena(_default_ver_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:simproto.test.Request.ver)
}
 ::std::string* Request::mutable_ver() {
  set_has_ver();
  // @@protoc_insertion_point(field_mutable:simproto.test.Request.ver)
  return ver_.MutableNoArena(_default_ver_);
}
 ::std::string* Request::release_ver() {
  clear_has_ver();
  return ver_.ReleaseNoArena(_default_ver_);
}
 void Request::set_allocated_ver(::std::string* ver) {
  if (ver != NULL) {
    set_has_ver();
  } else {
    clear_has_ver();
  }
  ver_.SetAllocatedNoArena(_default_ver_, ver);
  // @@protoc_insertion_point(field_set_allocated:simproto.test.Request.ver)
}

// required string cmd = 2;
 bool Request::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void Request::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
 void Request::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
 void Request::clear_cmd() {
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmd();
}
 const ::std::string& Request::cmd() const {
  // @@protoc_insertion_point(field_get:simproto.test.Request.cmd)
  return cmd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_cmd(const ::std::string& value) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:simproto.test.Request.cmd)
}
 void Request::set_cmd(const char* value) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:simproto.test.Request.cmd)
}
 void Request::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:simproto.test.Request.cmd)
}
 ::std::string* Request::mutable_cmd() {
  set_has_cmd();
  // @@protoc_insertion_point(field_mutable:simproto.test.Request.cmd)
  return cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_cmd() {
  clear_has_cmd();
  return cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_cmd(::std::string* cmd) {
  if (cmd != NULL) {
    set_has_cmd();
  } else {
    clear_has_cmd();
  }
  cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd);
  // @@protoc_insertion_point(field_set_allocated:simproto.test.Request.cmd)
}

// repeated string args = 3;
 int Request::args_size() const {
  return args_.size();
}
 void Request::clear_args() {
  args_.Clear();
}
 const ::std::string& Request::args(int index) const {
  // @@protoc_insertion_point(field_get:simproto.test.Request.args)
  return args_.Get(index);
}
 ::std::string* Request::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:simproto.test.Request.args)
  return args_.Mutable(index);
}
 void Request::set_args(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:simproto.test.Request.args)
  args_.Mutable(index)->assign(value);
}
 void Request::set_args(int index, const char* value) {
  args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:simproto.test.Request.args)
}
 void Request::set_args(int index, const char* value, size_t size) {
  args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:simproto.test.Request.args)
}
 ::std::string* Request::add_args() {
  return args_.Add();
}
 void Request::add_args(const ::std::string& value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:simproto.test.Request.args)
}
 void Request::add_args(const char* value) {
  args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:simproto.test.Request.args)
}
 void Request::add_args(const char* value, size_t size) {
  args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:simproto.test.Request.args)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Request::args() const {
  // @@protoc_insertion_point(field_list:simproto.test.Request.args)
  return args_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Request::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:simproto.test.Request.args)
  return &args_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Response_BodyType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_BodyType_descriptor_;
}
bool Response_BodyType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Response_BodyType Response::JSON;
const Response_BodyType Response::TEXT;
const Response_BodyType Response::XML;
const Response_BodyType Response::BodyType_MIN;
const Response_BodyType Response::BodyType_MAX;
const int Response::BodyType_ARRAYSIZE;
#endif  // _MSC_VER
::std::string* Response_ReturnCode::_default_err_msg_ = NULL;
#ifndef _MSC_VER
const int Response_ReturnCode::kErrNoFieldNumber;
const int Response_ReturnCode::kErrMsgFieldNumber;
#endif  // !_MSC_VER

Response_ReturnCode::Response_ReturnCode()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:simproto.test.Response.ReturnCode)
}

void Response_ReturnCode::InitAsDefaultInstance() {
}

Response_ReturnCode::Response_ReturnCode(const Response_ReturnCode& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:simproto.test.Response.ReturnCode)
}

void Response_ReturnCode::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  err_no_ = 0;
  err_msg_.UnsafeSetDefault(_default_err_msg_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_ReturnCode::~Response_ReturnCode() {
  // @@protoc_insertion_point(destructor:simproto.test.Response.ReturnCode)
  SharedDtor();
}

void Response_ReturnCode::SharedDtor() {
  err_msg_.DestroyNoArena(_default_err_msg_);
  if (this != default_instance_) {
  }
}

void Response_ReturnCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_ReturnCode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_ReturnCode_descriptor_;
}

const Response_ReturnCode& Response_ReturnCode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Response_ReturnCode* Response_ReturnCode::default_instance_ = NULL;

Response_ReturnCode* Response_ReturnCode::New(::google::protobuf::Arena* arena) const {
  Response_ReturnCode* n = new Response_ReturnCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_ReturnCode::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    err_no_ = 0;
    if (has_err_msg()) {
      err_msg_.ClearToDefaultNoArena(_default_err_msg_);
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_ReturnCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:simproto.test.Response.ReturnCode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 err_no = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &err_no_)));
          set_has_err_no();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err_msg;
        break;
      }

      // required string err_msg = 2 [default = "OK"];
      case 2: {
        if (tag == 18) {
         parse_err_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err_msg().data(), this->err_msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.test.Response.ReturnCode.err_msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:simproto.test.Response.ReturnCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:simproto.test.Response.ReturnCode)
  return false;
#undef DO_
}

void Response_ReturnCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:simproto.test.Response.ReturnCode)
  // required int32 err_no = 1 [default = 0];
  if (has_err_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->err_no(), output);
  }

  // required string err_msg = 2 [default = "OK"];
  if (has_err_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err_msg().data(), this->err_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.test.Response.ReturnCode.err_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err_msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:simproto.test.Response.ReturnCode)
}

::google::protobuf::uint8* Response_ReturnCode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:simproto.test.Response.ReturnCode)
  // required int32 err_no = 1 [default = 0];
  if (has_err_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->err_no(), target);
  }

  // required string err_msg = 2 [default = "OK"];
  if (has_err_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err_msg().data(), this->err_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.test.Response.ReturnCode.err_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err_msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:simproto.test.Response.ReturnCode)
  return target;
}

int Response_ReturnCode::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_err_no()) {
    // required int32 err_no = 1 [default = 0];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err_no());
  }

  if (has_err_msg()) {
    // required string err_msg = 2 [default = "OK"];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err_msg());
  }

  return total_size;
}
int Response_ReturnCode::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 err_no = 1 [default = 0];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->err_no());

    // required string err_msg = 2 [default = "OK"];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err_msg());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_ReturnCode::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Response_ReturnCode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Response_ReturnCode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response_ReturnCode::MergeFrom(const Response_ReturnCode& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err_no()) {
      set_err_no(from.err_no());
    }
    if (from.has_err_msg()) {
      set_has_err_msg();
      err_msg_.AssignWithDefault(_default_err_msg_, from.err_msg_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_ReturnCode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_ReturnCode::CopyFrom(const Response_ReturnCode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_ReturnCode::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Response_ReturnCode::Swap(Response_ReturnCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_ReturnCode::InternalSwap(Response_ReturnCode* other) {
  std::swap(err_no_, other->err_no_);
  err_msg_.Swap(&other->err_msg_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_ReturnCode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_ReturnCode_descriptor_;
  metadata.reflection = Response_ReturnCode_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Response_ReturnBody::kTypeFieldNumber;
const int Response_ReturnBody::kContentFieldNumber;
#endif  // !_MSC_VER

Response_ReturnBody::Response_ReturnBody()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:simproto.test.Response.ReturnBody)
}

void Response_ReturnBody::InitAsDefaultInstance() {
}

Response_ReturnBody::Response_ReturnBody(const Response_ReturnBody& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:simproto.test.Response.ReturnBody)
}

void Response_ReturnBody::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_ReturnBody::~Response_ReturnBody() {
  // @@protoc_insertion_point(destructor:simproto.test.Response.ReturnBody)
  SharedDtor();
}

void Response_ReturnBody::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Response_ReturnBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_ReturnBody::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_ReturnBody_descriptor_;
}

const Response_ReturnBody& Response_ReturnBody::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Response_ReturnBody* Response_ReturnBody::default_instance_ = NULL;

Response_ReturnBody* Response_ReturnBody::New(::google::protobuf::Arena* arena) const {
  Response_ReturnBody* n = new Response_ReturnBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_ReturnBody::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 0;
    if (has_content()) {
      content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_ReturnBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:simproto.test.Response.ReturnBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .simproto.test.Response.BodyType type = 1 [default = JSON];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::simproto::test::Response_BodyType_IsValid(value)) {
            set_type(static_cast< ::simproto::test::Response_BodyType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_content;
        break;
      }

      // required string content = 2;
      case 2: {
        if (tag == 18) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.test.Response.ReturnBody.content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:simproto.test.Response.ReturnBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:simproto.test.Response.ReturnBody)
  return false;
#undef DO_
}

void Response_ReturnBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:simproto.test.Response.ReturnBody)
  // required .simproto.test.Response.BodyType type = 1 [default = JSON];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required string content = 2;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.test.Response.ReturnBody.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:simproto.test.Response.ReturnBody)
}

::google::protobuf::uint8* Response_ReturnBody::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:simproto.test.Response.ReturnBody)
  // required .simproto.test.Response.BodyType type = 1 [default = JSON];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required string content = 2;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.test.Response.ReturnBody.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:simproto.test.Response.ReturnBody)
  return target;
}

int Response_ReturnBody::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_type()) {
    // required .simproto.test.Response.BodyType type = 1 [default = JSON];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_content()) {
    // required string content = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  return total_size;
}
int Response_ReturnBody::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .simproto.test.Response.BodyType type = 1 [default = JSON];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required string content = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_ReturnBody::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Response_ReturnBody* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Response_ReturnBody*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response_ReturnBody::MergeFrom(const Response_ReturnBody& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_content()) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_ReturnBody::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_ReturnBody::CopyFrom(const Response_ReturnBody& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_ReturnBody::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Response_ReturnBody::Swap(Response_ReturnBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_ReturnBody::InternalSwap(Response_ReturnBody* other) {
  std::swap(type_, other->type_);
  content_.Swap(&other->content_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_ReturnBody::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_ReturnBody_descriptor_;
  metadata.reflection = Response_ReturnBody_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

::std::string* Response::_default_ver_ = NULL;
#ifndef _MSC_VER
const int Response::kVerFieldNumber;
const int Response::kCodeFieldNumber;
const int Response::kBodyFieldNumber;
#endif  // !_MSC_VER

Response::Response()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:simproto.test.Response)
}

void Response::InitAsDefaultInstance() {
  code_ = const_cast< ::simproto::test::Response_ReturnCode*>(&::simproto::test::Response_ReturnCode::default_instance());
}

Response::Response(const Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:simproto.test.Response)
}

void Response::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ver_.UnsafeSetDefault(_default_ver_);
  code_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:simproto.test.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  ver_.DestroyNoArena(_default_ver_);
  if (this != default_instance_) {
    delete code_;
  }
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_descriptor_;
}

const Response& Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

Response* Response::default_instance_ = NULL;

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_ver()) {
      ver_.ClearToDefaultNoArena(_default_ver_);
    }
    if (has_code()) {
      if (code_ != NULL) code_->::simproto::test::Response_ReturnCode::Clear();
    }
  }
  body_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:simproto.test.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ver = 1 [default = "1.0"];
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ver().data(), this->ver().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "simproto.test.Response.ver");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_code;
        break;
      }

      // required .simproto.test.Response.ReturnCode code = 2;
      case 2: {
        if (tag == 18) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_body;
        break;
      }

      // repeated .simproto.test.Response.ReturnBody body = 3;
      case 3: {
        if (tag == 26) {
         parse_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_body()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_body;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:simproto.test.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:simproto.test.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:simproto.test.Response)
  // required string ver = 1 [default = "1.0"];
  if (has_ver()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ver().data(), this->ver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.test.Response.ver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ver(), output);
  }

  // required .simproto.test.Response.ReturnCode code = 2;
  if (has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->code_, output);
  }

  // repeated .simproto.test.Response.ReturnBody body = 3;
  for (unsigned int i = 0, n = this->body_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->body(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:simproto.test.Response)
}

::google::protobuf::uint8* Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:simproto.test.Response)
  // required string ver = 1 [default = "1.0"];
  if (has_ver()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ver().data(), this->ver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "simproto.test.Response.ver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ver(), target);
  }

  // required .simproto.test.Response.ReturnCode code = 2;
  if (has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->code_, target);
  }

  // repeated .simproto.test.Response.ReturnBody body = 3;
  for (unsigned int i = 0, n = this->body_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->body(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:simproto.test.Response)
  return target;
}

int Response::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_ver()) {
    // required string ver = 1 [default = "1.0"];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ver());
  }

  if (has_code()) {
    // required .simproto.test.Response.ReturnCode code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->code_);
  }

  return total_size;
}
int Response::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string ver = 1 [default = "1.0"];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ver());

    // required .simproto.test.Response.ReturnCode code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->code_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .simproto.test.Response.ReturnBody body = 3;
  total_size += 1 * this->body_size();
  for (int i = 0; i < this->body_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->body(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  body_.MergeFrom(from.body_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ver()) {
      set_has_ver();
      ver_.AssignWithDefault(_default_ver_, from.ver_);
    }
    if (from.has_code()) {
      mutable_code()->::simproto::test::Response_ReturnCode::MergeFrom(from.code());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_code()) {
    if (!this->code_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->body())) return false;
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  ver_.Swap(&other->ver_);
  std::swap(code_, other->code_);
  body_.UnsafeArenaSwap(&other->body_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_descriptor_;
  metadata.reflection = Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response_ReturnCode

// required int32 err_no = 1 [default = 0];
 bool Response_ReturnCode::has_err_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void Response_ReturnCode::set_has_err_no() {
  _has_bits_[0] |= 0x00000001u;
}
 void Response_ReturnCode::clear_has_err_no() {
  _has_bits_[0] &= ~0x00000001u;
}
 void Response_ReturnCode::clear_err_no() {
  err_no_ = 0;
  clear_has_err_no();
}
 ::google::protobuf::int32 Response_ReturnCode::err_no() const {
  // @@protoc_insertion_point(field_get:simproto.test.Response.ReturnCode.err_no)
  return err_no_;
}
 void Response_ReturnCode::set_err_no(::google::protobuf::int32 value) {
  set_has_err_no();
  err_no_ = value;
  // @@protoc_insertion_point(field_set:simproto.test.Response.ReturnCode.err_no)
}

// required string err_msg = 2 [default = "OK"];
 bool Response_ReturnCode::has_err_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void Response_ReturnCode::set_has_err_msg() {
  _has_bits_[0] |= 0x00000002u;
}
 void Response_ReturnCode::clear_has_err_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
 void Response_ReturnCode::clear_err_msg() {
  err_msg_.ClearToDefaultNoArena(_default_err_msg_);
  clear_has_err_msg();
}
 const ::std::string& Response_ReturnCode::err_msg() const {
  // @@protoc_insertion_point(field_get:simproto.test.Response.ReturnCode.err_msg)
  return err_msg_.GetNoArena(_default_err_msg_);
}
 void Response_ReturnCode::set_err_msg(const ::std::string& value) {
  set_has_err_msg();
  err_msg_.SetNoArena(_default_err_msg_, value);
  // @@protoc_insertion_point(field_set:simproto.test.Response.ReturnCode.err_msg)
}
 void Response_ReturnCode::set_err_msg(const char* value) {
  set_has_err_msg();
  err_msg_.SetNoArena(_default_err_msg_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:simproto.test.Response.ReturnCode.err_msg)
}
 void Response_ReturnCode::set_err_msg(const char* value, size_t size) {
  set_has_err_msg();
  err_msg_.SetNoArena(_default_err_msg_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:simproto.test.Response.ReturnCode.err_msg)
}
 ::std::string* Response_ReturnCode::mutable_err_msg() {
  set_has_err_msg();
  // @@protoc_insertion_point(field_mutable:simproto.test.Response.ReturnCode.err_msg)
  return err_msg_.MutableNoArena(_default_err_msg_);
}
 ::std::string* Response_ReturnCode::release_err_msg() {
  clear_has_err_msg();
  return err_msg_.ReleaseNoArena(_default_err_msg_);
}
 void Response_ReturnCode::set_allocated_err_msg(::std::string* err_msg) {
  if (err_msg != NULL) {
    set_has_err_msg();
  } else {
    clear_has_err_msg();
  }
  err_msg_.SetAllocatedNoArena(_default_err_msg_, err_msg);
  // @@protoc_insertion_point(field_set_allocated:simproto.test.Response.ReturnCode.err_msg)
}

// -------------------------------------------------------------------

// Response_ReturnBody

// required .simproto.test.Response.BodyType type = 1 [default = JSON];
 bool Response_ReturnBody::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void Response_ReturnBody::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
 void Response_ReturnBody::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
 void Response_ReturnBody::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::simproto::test::Response_BodyType Response_ReturnBody::type() const {
  // @@protoc_insertion_point(field_get:simproto.test.Response.ReturnBody.type)
  return static_cast< ::simproto::test::Response_BodyType >(type_);
}
 void Response_ReturnBody::set_type(::simproto::test::Response_BodyType value) {
  assert(::simproto::test::Response_BodyType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:simproto.test.Response.ReturnBody.type)
}

// required string content = 2;
 bool Response_ReturnBody::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void Response_ReturnBody::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
 void Response_ReturnBody::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
 void Response_ReturnBody::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
 const ::std::string& Response_ReturnBody::content() const {
  // @@protoc_insertion_point(field_get:simproto.test.Response.ReturnBody.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_ReturnBody::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:simproto.test.Response.ReturnBody.content)
}
 void Response_ReturnBody::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:simproto.test.Response.ReturnBody.content)
}
 void Response_ReturnBody::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:simproto.test.Response.ReturnBody.content)
}
 ::std::string* Response_ReturnBody::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:simproto.test.Response.ReturnBody.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_ReturnBody::release_content() {
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_ReturnBody::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:simproto.test.Response.ReturnBody.content)
}

// -------------------------------------------------------------------

// Response

// required string ver = 1 [default = "1.0"];
 bool Response::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void Response::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
 void Response::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
 void Response::clear_ver() {
  ver_.ClearToDefaultNoArena(_default_ver_);
  clear_has_ver();
}
 const ::std::string& Response::ver() const {
  // @@protoc_insertion_point(field_get:simproto.test.Response.ver)
  return ver_.GetNoArena(_default_ver_);
}
 void Response::set_ver(const ::std::string& value) {
  set_has_ver();
  ver_.SetNoArena(_default_ver_, value);
  // @@protoc_insertion_point(field_set:simproto.test.Response.ver)
}
 void Response::set_ver(const char* value) {
  set_has_ver();
  ver_.SetNoArena(_default_ver_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:simproto.test.Response.ver)
}
 void Response::set_ver(const char* value, size_t size) {
  set_has_ver();
  ver_.SetNoArena(_default_ver_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:simproto.test.Response.ver)
}
 ::std::string* Response::mutable_ver() {
  set_has_ver();
  // @@protoc_insertion_point(field_mutable:simproto.test.Response.ver)
  return ver_.MutableNoArena(_default_ver_);
}
 ::std::string* Response::release_ver() {
  clear_has_ver();
  return ver_.ReleaseNoArena(_default_ver_);
}
 void Response::set_allocated_ver(::std::string* ver) {
  if (ver != NULL) {
    set_has_ver();
  } else {
    clear_has_ver();
  }
  ver_.SetAllocatedNoArena(_default_ver_, ver);
  // @@protoc_insertion_point(field_set_allocated:simproto.test.Response.ver)
}

// required .simproto.test.Response.ReturnCode code = 2;
 bool Response::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void Response::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
 void Response::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
 void Response::clear_code() {
  if (code_ != NULL) code_->::simproto::test::Response_ReturnCode::Clear();
  clear_has_code();
}
 const ::simproto::test::Response_ReturnCode& Response::code() const {
  // @@protoc_insertion_point(field_get:simproto.test.Response.code)
  return code_ != NULL ? *code_ : *default_instance_->code_;
}
 ::simproto::test::Response_ReturnCode* Response::mutable_code() {
  set_has_code();
  if (code_ == NULL) {
    code_ = new ::simproto::test::Response_ReturnCode;
  }
  // @@protoc_insertion_point(field_mutable:simproto.test.Response.code)
  return code_;
}
 ::simproto::test::Response_ReturnCode* Response::release_code() {
  clear_has_code();
  ::simproto::test::Response_ReturnCode* temp = code_;
  code_ = NULL;
  return temp;
}
 void Response::set_allocated_code(::simproto::test::Response_ReturnCode* code) {
  delete code_;
  code_ = code;
  if (code) {
    set_has_code();
  } else {
    clear_has_code();
  }
  // @@protoc_insertion_point(field_set_allocated:simproto.test.Response.code)
}

// repeated .simproto.test.Response.ReturnBody body = 3;
 int Response::body_size() const {
  return body_.size();
}
 void Response::clear_body() {
  body_.Clear();
}
 const ::simproto::test::Response_ReturnBody& Response::body(int index) const {
  // @@protoc_insertion_point(field_get:simproto.test.Response.body)
  return body_.Get(index);
}
 ::simproto::test::Response_ReturnBody* Response::mutable_body(int index) {
  // @@protoc_insertion_point(field_mutable:simproto.test.Response.body)
  return body_.Mutable(index);
}
 ::simproto::test::Response_ReturnBody* Response::add_body() {
  // @@protoc_insertion_point(field_add:simproto.test.Response.body)
  return body_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::simproto::test::Response_ReturnBody >&
Response::body() const {
  // @@protoc_insertion_point(field_list:simproto.test.Response.body)
  return body_;
}
 ::google::protobuf::RepeatedPtrField< ::simproto::test::Response_ReturnBody >*
Response::mutable_body() {
  // @@protoc_insertion_point(field_mutable_list:simproto.test.Response.body)
  return &body_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace test
}  // namespace simproto

// @@protoc_insertion_point(global_scope)
